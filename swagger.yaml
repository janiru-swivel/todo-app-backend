openapi: 3.0.0
info:
  title: Todo API with Authentication
  description: API for managing todos with user authentication
  version: 1.0.0
servers:
  - url: http://localhost:7000/api
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Todo:
      type: object
      properties:
        _id:
          type: string
          description: Todo ID
        title:
          type: string
          description: Title of the todo
        description:
          type: string
          description: Detailed description of the todo
        completed:
          type: boolean
          description: Completion status of the todo
        user:
          type: string
          description: ID of the user who created the todo
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - title

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message

    LoginCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    RegisterCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        message:
          type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterCredentials"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Invalid input or email already registered
        "500":
          description: Server error

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Invalid credentials
        "500":
          description: Server error

  /auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        "200":
          description: Token refresh successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Invalid refresh token
        "500":
          description: Server error

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Logout successful
        "401":
          description: Unauthorized
        "500":
          description: Server error

  /todo:
    post:
      tags:
        - Todos
      summary: Create a new todo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                completed:
                  type: boolean
      responses:
        "201":
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "500":
          description: Server error

  /todos:
    get:
      tags:
        - Todos
      summary: Get all todos for authenticated user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "404":
          description: No todos found
        "500":
          description: Server error

  /todo/{id}:
    get:
      tags:
        - Todos
      summary: Get a specific todo by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Todo found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "404":
          description: Todo not found
        "500":
          description: Server error

    put:
      tags:
        - Todos
      summary: Update a specific todo
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                completed:
                  type: boolean
      responses:
        "200":
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "404":
          description: Todo not found
        "500":
          description: Server error

    delete:
      tags:
        - Todos
      summary: Delete a specific todo
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Todo deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Todo not found
        "500":
          description: Server error
